["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$cljs-bach.synthesis","~:imports",null,"~:requires",null,"~:uses",null,"~:defs",["^ ","~$white-noise",["^ ","^5","~$cljs-bach.synthesis/white-noise","~:file","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","~:line",159,"~:column",1,"~:end-line",159,"~:end-column",17,"~:meta",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",159,"^?",6,"^@",159,"^A",17],"~:doc","Random noise."],"~$audio-context",["^ ","~:protocol-inline",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",3,"^?",7,"^@",3,"^A",20,"~:arglists",["~#list",["~$quote",["^G",[[]]]]],"^C","Construct an audio context in a way that works even if it's prefixed."],"^5","~$cljs-bach.synthesis/audio-context","~:variadic",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",20,"~:method-params",["^G",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^G",[null,null]],"^?",1,"^>",3,"^@",3,"~:max-fixed-arity",0,"~:fn-var",true,"^F",["^G",["^H",["^G",[[]]]]],"^C","Construct an audio context in a way that works even if it's prefixed."],"~$add",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",130,"^?",7,"^@",130,"^A",10,"^F",["^G",["^H",["^G",[["~$&","~$synths"]]]]],"^C","Add together synths by connecting them all to the same upstream and downstream gains.","~:top-fn",["^ ","^J",true,"^N",0,"^K",[["^G",["^Q"]]],"^F",["^G",[["~$&","^Q"]]],"^M",["^G",[null]]]],"^5","~$cljs-bach.synthesis/add","^J",true,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",10,"^R",["^ ","^J",true,"^N",0,"^K",[["^G",["^Q"]]],"^F",["^G",[["~$&","^Q"]]],"^M",["^G",[null]]],"^K",[["^G",["^Q"]]],"^L",null,"^M",["^G",[null]],"^?",1,"^>",130,"^@",130,"^N",0,"^O",true,"^F",["^G",[["~$&","^Q"]]],"^C","Add together synths by connecting them all to the same upstream and downstream gains."],"~$run-with",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",33,"^?",7,"^@",33,"^A",15,"^F",["^G",["^H",["^G",[["~$synth","~$context","~$at","~$duration"]]]]],"^C","Convert a synth (actually a reader fn) into a concrete subgraph by supplying context and timing."],"^5","~$cljs-bach.synthesis/run-with","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",15,"^K",["^G",[["^U","^V","^W","^X"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",33,"^@",33,"^N",4,"^O",true,"^F",["^G",["^H",["^G",[["^U","^V","^W","^X"]]]]],"^C","Convert a synth (actually a reader fn) into a concrete subgraph by supplying context and timing."],"~$destination",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",38,"^?",7,"^@",38,"^A",18,"^F",["^G",["^H",["^G",[["^V","^W","^X"]]]]],"^C","The destination of the audio context i.e. the speakers."],"^5","~$cljs-bach.synthesis/destination","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",18,"^K",["^G",[["^V","^W","^X"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",38,"^@",38,"^N",3,"^O",true,"^F",["^G",["^H",["^G",[["^V","^W","^X"]]]]],"^C","The destination of the audio context i.e. the speakers."],"~$sink",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",26,"^?",7,"^@",26,"^A",11,"^F",["^G",["^H",["^G",[["~$node"]]]]],"^C","A graph of synthesis nodes without an output, so it can't connect to another graph."],"^5","~$cljs-bach.synthesis/sink","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",11,"^K",["^G",[["^11"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",26,"^@",26,"^N",1,"^O",true,"^F",["^G",["^H",["^G",[["^11"]]]]],"^C","A graph of synthesis nodes without an output, so it can't connect to another graph."],"~$join",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",121,"^?",7,"^@",121,"^A",11,"^F",["^G",["^H",["^G",[["~$upstream","~$downstream","~$&","~$graphs"]]]]],"^C","Join the graphs in parallel, with upstream and downstream as the source and sink.","^R",["^ ","^J",true,"^N",2,"^K",[["^G",["^14","^15","^16"]]],"^F",["^G",[["^14","^15","~$&","^16"]]],"^M",["^G",[null]]]],"^5","~$cljs-bach.synthesis/join","^J",true,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",11,"^R",["^ ","^J",true,"^N",2,"^K",[["^G",["^14","^15","^16"]]],"^F",["^G",[["^14","^15","~$&","^16"]]],"^M",["^G",[null]]],"^K",[["^G",["^14","^15","^16"]]],"^L",null,"^M",["^G",[null]],"^?",1,"^>",121,"^@",121,"^N",2,"^O",true,"^F",["^G",[["^14","^15","~$&","^16"]]],"^C","Join the graphs in parallel, with upstream and downstream as the source and sink."],"~$buffer",["^ ","^5","~$cljs-bach.synthesis/buffer","^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",148,"^?",1,"^@",148,"^A",12,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",148,"^?",6,"^@",148,"^A",12]],"~$adsr",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",81,"^?",7,"^@",81,"^A",11,"^F",["^G",["^H",["^G",[["~$attack","~$decay","~$sustain","~$release"]]]]],"^C","A four-stage envelope."],"^5","~$cljs-bach.synthesis/adsr","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",11,"^K",["^G",[["^1;","^1<","^1=","^1>"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",81,"^@",81,"^N",4,"^O",true,"^F",["^G",["^H",["^G",[["^1;","^1<","^1=","^1>"]]]]],"^C","A four-stage envelope."],"~$stereo-panner",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",210,"^?",7,"^@",210,"^A",20,"^F",["^G",["^H",["^G",[["~$pan"]]]]],"^C","Pan the signal left (-1) or right (1)."],"^5","~$cljs-bach.synthesis/stereo-panner","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",20,"^K",["^G",[["^1A"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",210,"^@",210,"^N",1,"^O",true,"^F",["^G",["^H",["^G",[["^1A"]]]]],"^C","Pan the signal left (-1) or right (1)."],"~$enhance",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",246,"^?",7,"^@",246,"^A",14,"^F",["^G",["^H",["^G",[["~$effect","~$level"]]]]],"^C","Mix the original signal with one with the effect applied."],"^5","~$cljs-bach.synthesis/enhance","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",14,"^K",["^G",[["^1D","^1E"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",246,"^@",246,"^N",2,"^O",true,"^F",["^G",["^H",["^G",[["^1D","^1E"]]]]],"^C","Mix the original signal with one with the effect applied."],"~$adshr",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",76,"^?",7,"^@",76,"^A",12,"^F",["^G",["^H",["^G",[["^1;","^1<","^1=","~$hold","^1>"]]]]],"^C","An ADSR envelope that also lets you specify the hold duration."],"^5","~$cljs-bach.synthesis/adshr","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",12,"^K",["^G",[["^1;","^1<","^1=","^1H","^1>"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",76,"^@",76,"^N",5,"^O",true,"^F",["^G",["^H",["^G",[["^1;","^1<","^1=","^1H","^1>"]]]]],"^C","An ADSR envelope that also lets you specify the hold duration."],"~$envelope",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",64,"^?",7,"^@",64,"^A",15,"^F",["^G",["^H",["^G",[["~$&","~$corners"]]]]],"^C","Build an envelope out of [segment-duration final-level] coordinates.","^R",["^ ","^J",true,"^N",0,"^K",[["^G",["^1K"]]],"^F",["^G",[["~$&","^1K"]]],"^M",["^G",[null]]]],"^5","~$cljs-bach.synthesis/envelope","^J",true,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",15,"^R",["^ ","^J",true,"^N",0,"^K",[["^G",["^1K"]]],"^F",["^G",[["~$&","^1K"]]],"^M",["^G",[null]]],"^K",[["^G",["^1K"]]],"^L",null,"^M",["^G",[null]],"^?",1,"^>",64,"^@",64,"^N",0,"^O",true,"^F",["^G",[["~$&","^1K"]]],"^C","Build an envelope out of [segment-duration final-level] coordinates."],"~$connect->",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",116,"^?",7,"^@",116,"^A",16,"^F",["^G",["^H",["^G",[["~$&","~$nodes"]]]]],"^C","Connect synths in series.","^R",["^ ","^J",true,"^N",0,"^K",[["^G",["^1N"]]],"^F",["^G",[["~$&","^1N"]]],"^M",["^G",[null]]]],"^5","~$cljs-bach.synthesis/connect->","^J",true,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",16,"^R",["^ ","^J",true,"^N",0,"^K",[["^G",["^1N"]]],"^F",["^G",[["~$&","^1N"]]],"^M",["^G",[null]]],"^K",[["^G",["^1N"]]],"^L",null,"^M",["^G",[null]],"^?",1,"^>",116,"^@",116,"^N",0,"^O",true,"^F",["^G",[["~$&","^1N"]]],"^C","Connect synths in series."],"~$current-time",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",10,"^?",7,"^@",10,"^A",19,"^F",["^G",["^H",["^G",[["^V"]]]]],"^C","Return the current time as recorded by the audio context."],"^5","~$cljs-bach.synthesis/current-time","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",19,"^K",["^G",[["^V"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",10,"^@",10,"^N",1,"^O",true,"^F",["^G",["^H",["^G",[["^V"]]]]],"^C","Return the current time as recorded by the audio context."],"~$convolver",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",227,"^?",7,"^@",227,"^A",16,"^F",["^G",["^H",["^G",[["~$generate-bit!"]]]]],"^C","Linear convolution."],"^5","~$cljs-bach.synthesis/convolver","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",16,"^K",["^G",[["^1S"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",227,"^@",227,"^N",1,"^O",true,"^F",["^G",["^H",["^G",[["^1S"]]]]],"^C","Linear convolution."],"~$oscillator",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",171,"^?",7,"^@",171,"^A",17,"^F",["^G",["^H",["^G",[["~$type","~$freq"]]]]],"^C","A periodic wave."],"^5","~$cljs-bach.synthesis/oscillator","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",17,"^K",["^G",[["^1V","^1W"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",171,"^@",171,"^N",2,"^O",true,"^F",["^G",["^H",["^G",[["^1V","^1W"]]]]],"^C","A periodic wave."],"~$update-graph",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",98,"^?",7,"^@",98,"^A",19,"^F",["^G",["^H",["^G",[["~$f","~$&","^Q"]]]]],"^C","Like update-in, but for the node graph a synth will return (and variadic).","^R",["^ ","^J",true,"^N",1,"^K",[["^G",["~$f","^Q"]]],"^F",["^G",[["~$f","~$&","^Q"]]],"^M",["^G",[null]]]],"^5","~$cljs-bach.synthesis/update-graph","^J",true,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",19,"^R",["^ ","^J",true,"^N",1,"^K",[["^G",["~$f","^Q"]]],"^F",["^G",[["~$f","~$&","^Q"]]],"^M",["^G",[null]]],"^K",[["^G",["~$f","^Q"]]],"^L",null,"^M",["^G",[null]],"^?",1,"^>",98,"^@",98,"^N",1,"^O",true,"^F",["^G",[["~$f","~$&","^Q"]]],"^C","Like update-in, but for the node graph a synth will return (and variadic)."],"~$sawtooth",["^ ","^5","~$cljs-bach.synthesis/sawtooth","^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",184,"^?",1,"^@",184,"^A",14,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",184,"^?",6,"^@",184,"^A",14]],"~$triangle",["^ ","^5","~$cljs-bach.synthesis/triangle","^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",186,"^?",1,"^@",186,"^A",14,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",186,"^?",6,"^@",186,"^A",14]],"~$plug",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",43,"^?",7,"^@",43,"^A",11,"^F",["^G",["^H",["^G",[["~$param","~$input","^V","^W","^X"]]]]]],"^5","~$cljs-bach.synthesis/plug","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",11,"^K",["^G",[["^24","^25","^V","^W","^X"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",43,"^@",43,"^N",5,"^O",true,"^F",["^G",["^H",["^G",[["^24","^25","^V","^W","^X"]]]]]],"~$pass-through",["^ ","^5","~$cljs-bach.synthesis/pass-through","^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",57,"^?",1,"^@",57,"^A",18,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",57,"^?",6,"^@",57,"^A",18],"^C","Pass the signal through unaltered."],"~$constant",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",164,"^?",7,"^@",164,"^A",15,"^F",["^G",["^H",["^G",[["~$x"]]]]],"^C","Make a constant value by creating noise with a fixed value."],"^5","~$cljs-bach.synthesis/constant","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",15,"^K",["^G",[["~$x"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",164,"^@",164,"^N",1,"^O",true,"^F",["^G",["^H",["^G",[["~$x"]]]]],"^C","Make a constant value by creating noise with a fixed value."],"~$connect",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",106,"^?",7,"^@",106,"^A",14,"^F",["^G",["^H",["^G",[["~$upstream-synth","~$downstream-synth"]]]]],"^C","Use the output of one synth as the input to another."],"^5","~$cljs-bach.synthesis/connect","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",14,"^K",["^G",[["^2<","^2="]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",106,"^@",106,"^N",2,"^O",true,"^F",["^G",["^H",["^G",[["^2<","^2="]]]]],"^C","Use the output of one synth as the input to another."],"~$reverb",["^ ","^5","~$cljs-bach.synthesis/reverb","^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",235,"^?",1,"^@",235,"^A",12,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",235,"^?",6,"^@",235,"^A",12],"^C","Crude reverb."],"~$raw-buffer",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",138,"^?",7,"^@",138,"^A",17,"^F",["^G",["^H",["^G",[["^1S","^V","^X"]]]]]],"^5","~$cljs-bach.synthesis/raw-buffer","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",17,"^K",["^G",[["^1S","^V","^X"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",138,"^@",138,"^N",3,"^O",true,"^F",["^G",["^H",["^G",[["^1S","^V","^X"]]]]]],"~$low-pass",["^ ","^5","~$cljs-bach.synthesis/low-pass","^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",204,"^?",1,"^@",204,"^A",14,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",204,"^?",6,"^@",204,"^A",14]],"~$noise",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",150,"^?",7,"^@",150,"^A",12,"^F",["^G",["^H",["^G",[["^1S"]]]]],"^C","Make noise according to the supplied strategy for creating bits."],"^5","~$cljs-bach.synthesis/noise","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",12,"^K",["^G",[["^1S"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",150,"^@",150,"^N",1,"^O",true,"^F",["^G",["^H",["^G",[["^1S"]]]]],"^C","Make noise according to the supplied strategy for creating bits."],"~$delay-line",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",218,"^?",7,"^@",218,"^A",17,"^F",["^G",["^H",["^G",[["~$seconds"]]]]],"^C","Delay the signal."],"^5","~$cljs-bach.synthesis/delay-line","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",17,"^K",["^G",[["^2H"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",218,"^@",218,"^N",1,"^O",true,"^F",["^G",["^H",["^G",[["^2H"]]]]],"^C","Delay the signal."],"~$source",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",21,"^?",7,"^@",21,"^A",13,"^F",["^G",["^H",["^G",[["^11"]]]]],"^C","A graph of synthesis nodes without an input, so another graph can't connect to it."],"^5","~$cljs-bach.synthesis/source","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",13,"^K",["^G",[["^11"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",21,"^@",21,"^N",1,"^O",true,"^F",["^G",["^H",["^G",[["^11"]]]]],"^C","A graph of synthesis nodes without an input, so another graph can't connect to it."],"~$high-pass",["^ ","^5","~$cljs-bach.synthesis/high-pass","^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",205,"^?",1,"^@",205,"^A",15,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",205,"^?",6,"^@",205,"^A",15]],"~$biquad-filter",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",191,"^?",7,"^@",191,"^A",20,"^F",["^G",["^H",["^G",[["^1V","^1W"],["^1V","^1W","~$q"]]]]],"^C","Attenuate frequencies beyond the cutoff, and intensify the cutoff frequency based on the value of q.","^R",["^ ","^J",false,"^N",3,"^K",["^G",[["^1V","^1W"],["^1V","^1W","~$q"]]],"^F",["^G",[["^1V","^1W"],["^1V","^1W","~$q"]]],"^M",["^G",[null,null]]]],"^5","~$cljs-bach.synthesis/biquad-filter","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",20,"^R",["^ ","^J",false,"^N",3,"^K",["^G",[["^1V","^1W"],["^1V","^1W","~$q"]]],"^F",["^G",[["^1V","^1W"],["^1V","^1W","~$q"]]],"^M",["^G",[null,null]]],"^K",["^G",[["^1V","^1W"],["^1V","^1W","~$q"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",191,"^@",191,"^N",3,"^O",true,"^F",["^G",[["^1V","^1W"],["^1V","^1W","~$q"]]],"^C","Attenuate frequencies beyond the cutoff, and intensify the cutoff frequency based on the value of q."],"~$gain",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",49,"^?",7,"^@",49,"^A",11,"^F",["^G",["^H",["^G",[["^1E"]]]]],"^C","Multiply the signal by level."],"^5","~$cljs-bach.synthesis/gain","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",11,"^K",["^G",[["^1E"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",49,"^@",49,"^N",1,"^O",true,"^F",["^G",["^H",["^G",[["^1E"]]]]],"^C","Multiply the signal by level."],"~$square",["^ ","^5","~$cljs-bach.synthesis/square","^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",185,"^?",1,"^@",185,"^A",12,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",185,"^?",6,"^@",185,"^A",12]],"~$subgraph",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",17,"^?",7,"^@",17,"^A",15,"^F",["^G",["^H",["^G",[["^25","~$output"],["~$singleton"]]]]],"^R",["^ ","^J",false,"^N",2,"^K",["^G",[["^25","^2U"],["^2V"]]],"^F",["^G",[["^25","^2U"],["^2V"]]],"^M",["^G",[null,null]]]],"^5","~$cljs-bach.synthesis/subgraph","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",15,"^R",["^ ","^J",false,"^N",2,"^K",["^G",[["^25","^2U"],["^2V"]]],"^F",["^G",[["^25","^2U"],["^2V"]]],"^M",["^G",[null,null]]],"^K",["^G",[["^25","^2U"],["^2V"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",17,"^@",17,"^N",2,"^O",true,"^F",["^G",[["^25","^2U"],["^2V"]]]],"~$sine",["^ ","^5","~$cljs-bach.synthesis/sine","^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",183,"^?",1,"^@",183,"^A",10,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",183,"^?",6,"^@",183,"^A",10]],"~$percussive",["^ ","^E",null,"^B",["^ ","^=","/Users/calmdotcalm/dev/clojurescript/chakrates/resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^>",90,"^?",7,"^@",90,"^A",17,"^F",["^G",["^H",["^G",[["^1;","^1<"]]]]],"^C","A simple envelope."],"^5","~$cljs-bach.synthesis/percussive","^J",false,"^=","resources/public/js/compiled/out/cljs_bach/synthesis.cljs","^A",17,"^K",["^G",[["^1;","^1<"]]],"^L",null,"^M",["^G",[null,null]],"^?",1,"^>",90,"^@",90,"^N",2,"^O",true,"^F",["^G",["^H",["^G",[["^1;","^1<"]]]]],"^C","A simple envelope."]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:output","~:input"]],"~:order",["^34","^33"]],"^C",null]